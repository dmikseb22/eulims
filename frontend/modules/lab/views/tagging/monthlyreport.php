<?php

use yii\helpers\Html;
use kartik\grid\GridView;
use common\models\lab\Customer;
use common\models\lab\Discount;
use common\models\lab\Lab;
use common\models\lab\Sample;
use common\models\lab\Analysis;
use common\models\lab\Testcategory;
use yii\helpers\ArrayHelper;
use yii\bootstrap\Modal;
use yii\helpers\Url;



/* @var $this yii\web\View */
/* @var $searchModel common\models\lab\LabsampletypeSearch */
/* @var $dataProvider yii\data\ActiveDataProvider */



/*
Description:
Monthly Report Generated by Lab Managers and Lab Users for their acomplishment report

This page will the accepting the $request variable which is a pool of data of Request and then  plotting them on this tabular report.

just refer to the table below for the columns needed.


Note: Avoid querying data here as much as you can, please maximize the use of the relations  of the request to sample  and analayses and etc

Date created: February 4, 2020
created by: Bergel Cutara
position: Sr. SRS
contact number : 09956200353
email: b.cutara@gmail.com


**/

echo "<h1>Monthly Report for <b>".$month." ".$year."</b></h1>";

?>
    <?php $this->registerJsFile("/js/services/services.js"); ?>

    <?= GridView::widget([
        'dataProvider' => $requestdataprovider,
        'id'=>'analysis-grid',
        'pjax' => true,
        'pjaxSettings' => ['options' => ['id' => 'kv-pjax-container-analysis']],
        'panel' => [
                'type' => GridView::TYPE_PRIMARY,
                'heading' => '<span class="glyphicon glyphicon-book"></span>  Monthly Report' ,
                Html::button('<i class="glyphicon glyphicon-ok"></i> Completed', ['disabled'=>false,'value' => Url::to(['tagging/completedanalysis','id'=>1]),'title'=>'Completed', 'onclick'=>'completedanalysis()', 'class' => 'btn btn-success','id' => 'btn_complete_analysis']),
            ],
        'pjaxSettings' => [
            'options' => [
                'enablePushState' => false,
            ]
        ],
        'floatHeaderOptions' => ['scrollingTop' => true],
        'columns' => [
            'request_ref_num',
            'customer.customer_name',
            'customer.Completeaddress',
            [
                'header'=>'Setup',
                'format' => 'raw',
                'width' => '80px',
                'enableSorting' => false,
                'value' => function($model) {
                    if ($model->customer->customer_type_id==1){
                        return "Yes";
                    }else{
                        return "No";
                    }
                    
                },
                'contentOptions' => ['style' => 'width:40px; white-space: normal;'],                 
            ],
             [
                'header'=>'Sample Name',
                'format' => 'html',
                'width' => '400px',
                'headerOptions' => ['style' => 'width:400px'],
                'enableSorting' => false,
                'value' => function($model) {
                    $value="";
                    foreach($model->samples as $sample){
                        $value .= $sample->samplename;
                         foreach ($sample->analyses as $analysis) {
                            $value .= "<br/>";
                        }
                    }
                    return $value;
                },
                'contentOptions' => ['style' => 'width:400px; white-space: normal;'],                 
            ],
            [
                'header'=>'Sample Code',
                'format' => 'html',
                'width' => '200px',
                'headerOptions' => ['style' => 'width:200px'],
                'enableSorting' => false,
                'value' => function($model) {
                    $value="";
                    foreach($model->samples as $sample){
                        $value .= $sample->sample_code;
                         foreach ($sample->analyses as $analysis) {
                            $value .= "<br/>";
                        }
                    }
                    return $value;
                },
                'contentOptions' => ['style' => 'width:200px; white-space: normal;'],                 
            ],
            [
                'header'=>'Test Name',
                'format' => 'raw',
                'width' => '200px',
                'headerOptions' => ['style' => 'width:200px'],
                'enableSorting' => false,
                'value' => function($model) {
                    $value="";
                    foreach($model->samples as $sample){
                        foreach ($sample->analyses as $analysis) {
                            $value .= $analysis->testname."<br/>";
                        }
                    }
                    return $value;
                },
                'contentOptions' => ['style' => 'width:200px; white-space: normal;'],                 
            ],
            [
                'header'=>'Request Total',
                'format' => 'raw',
                'width' => '100px',
                'enableSorting' => false,
                'value' => function($model) {
                    $ids="";
                    $amount =0;
                    $samplesquery = Sample::find()->where(['request_id' => $model->request_id, 'active' => 1])->all();
                    foreach($samplesquery as $samples){
                        $ids .= $samples['sample_id'].",";
                        if($samples->analyses){
                            foreach ($samples->analyses as $analysis) {
                               $amount += $analysis->fee; 
                            }
                        }
                    }
                    return number_format((float)$amount, 2, '.', '');
                },
                'contentOptions' => ['style' => 'width:40px; white-space: normal;'],                 
            ],
            [
                'header'=>'Paid Non Setup',
                'format' => 'raw',
                'width' => '100px',
                'enableSorting' => false,
                'value' => function($model) {
                    return "";
                },
                'contentOptions' => ['style' => 'width:40px; white-space: normal;'],                 
            ],
            [
                'header'=>'Paid Setup',
                'format' => 'raw',
                'width' => '100px',
                'enableSorting' => false,
                'value' => function($model) {
                    return "";
                },
                'contentOptions' => ['style' => 'width:40px; white-space: normal;'],                 
            ],
            [
                'header'=>'Gratis Non Setup',
                'format' => 'raw',
                'width' => '100px',
                'enableSorting' => false,
                'value' => function($model) {
                    if($model->discount_id == 8){
                        $discountquery = Discount::find()->where(['discount_id' => $model->discount_id])->one();
                        $rate =  $discountquery->rate;

                        $ids="";
                        $amount =0;
                        $samplesquery = Sample::find()->where(['request_id' => $model->request_id, 'active' => 1])->all();
                        foreach($samplesquery as $samples){
                            $ids .= $samples['sample_id'].",";
                            if($samples->analyses){
                                foreach ($samples->analyses as $analysis) {
                                   $amount += $analysis->fee; 
                                }
                            }
                        }
                        $theamount = $amount * ((int)$rate * 0.01);
                        return number_format((float)$theamount, 2, '.', '');
                    }
                    return "";
                },
                'contentOptions' => ['style' => 'width:40px; white-space: normal;'],                 
            ],
            [
                'header'=>'Gratis Setup',
                'format' => 'raw',
                'width' => '100px',
                'enableSorting' => false,
                'value' => function($model) {
                    return "";
                },
                'contentOptions' => ['style' => 'width:40px; white-space: normal;'],                 
            ],
            [
                'header'=>'Discount',
                'format' => 'raw',
                'width' => '100px',
                'enableSorting' => false,
                'value' => function($model) {
                    if($model->discount_id != 8){
                        // $discountquery = Discount::find()->where(['discount_id' => $model->discount_id])->one();
                        $rate =  $model->discount;

                        $ids="";
                        $amount =0;
                        $samplesquery = Sample::find()->where(['request_id' => $model->request_id, 'active' => 1])->all();
                        foreach($samplesquery as $samples){
                            $ids .= $samples['sample_id'].",";
                            if($samples->analyses){
                                foreach ($samples->analyses as $analysis) {
                                   $amount += $analysis->fee; 
                                }
                            }
                        }
                        $theamount = $amount * ((int)$rate * 0.01);
                        return number_format((float)$theamount, 2, '.', '');
                    }
                    return "";
                },
                'contentOptions' => ['style' => 'width:40px; white-space: normal;'],                 
            ],
            [
                'header'=>'Total Fees Collected',
                'attribute'=>'total'              
            ]
        ],
    ]); 
    ?>



   

